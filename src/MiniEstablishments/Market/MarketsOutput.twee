:: MarketOutput [market nobr]
<<include "PrintImage">>
<<set $building to lib.findInArray($town.buildings, "key", $currentPassage.key)>>
<<set _marketData to lib.market>><<if ndef $building.sellers>><<set $building.sellers to {}>><<run setup.createMarketSellers($town, $building.sellers, 4)>>
<<set $building.magicSeller to setup.createNPC($town, {background: ["commoner", "commoner", "commoner", "noble"].random(), profession: "merchant"})>><</if>>
<h1 class="interactive-only">$building.name</h1><span @id="$building.key"></span><p>You wander through the streets of $town.name, and come across the market, which is located in $building.location. It seems that the vendors are organised by $building.organisation. The market is known for $building.draw, and is $building.cleanliness. Today the market is $building.crowd.</p>
<section><h3>Merchants</h3>
<<for _key, _seller range $building.sellers>>
<p><<print ["A ", "Nearby, a ", "Off to the side, a "].random()>> <<profile $npcs[_key] $npcs[_key].descriptor>> is _seller.selling from a _seller.tent.</p>
<</for>></section>
<span class="interactive-only">
  <<link "<h4>Who else is there?</h4>">>
    <<set $building.moreSeller to setup.createNPC($town, { profession: "merchant", hasClass: false, isThrowaway: true})>><<set $building.moreSeller.merchant to {}>><<set $building.moreSeller.merchant.selling to lib.market.vendors.selling.random()>><<set $building.moreSeller.merchant.tent to lib.market.vendors.tent.random()>>
    <<update>>
  <</link>>
  <<liveblock>>
    <<if ndef $building.moreSeller>>
        <span id="moreSellers"></span>
      <<else>>
      <p>There's <<profile $building.moreSeller $building.moreSeller.descriptor true>> selling $building.moreSeller.merchant.selling from <<print lib.articles.output($building.moreSeller.merchant.tent)>>.</p>
    <</if>>
  <</liveblock>>
</span>
<span class="interactive-only">
  A <<profile $building.magicSeller $building.magicSeller.descriptor>> is selling magical trinkets from <<print lib.articles.output(_marketData.vendors.tent.random())>>. Or, at least, they're supposedly magical items.
  <label name="Type of magic" for="listbox-buildingmagicselection"><<listbox "$building.magicSelection">>
  <<option "Ring" "ring">><<option "Weapon" "weapon">><<option "Armour" "armour">><<option "Trinket" "trinket">>
  <</listbox>></label> -- <<button "Create a magic item!">>
    <<set $building.magicType to $building.magicSelection>>
    <<switch $building.magicType>>
      <<case "ring">>
        <<set $building.magic to lib.createRing()>>
        <<replace "#magic">>The $building.magicSeller.manwoman beckons you over to $building.magicSeller.hisher stall, and introduces $building.magicSeller.himherself as <<profile $building.magicSeller>>, a purveyor of fine goods. The $building.magicSeller.raceNote asks you for your ring size, and then $building.magicSeller.heshe reaches below $building.magicSeller.hisher table, and procures a ring...
              <div class="descriptive">
                <h3><<print lib.articles.output($building.magic.material).toUpperFirst()>> ring</h3>
                $building.magic.firstOutputs</div>
        <</replace>><<link "<h4>Look at another ring</h4>">><<set $building.magic to lib.createRing()>>
            <<replace "#magic">>
                  <div class="descriptive">
                    <h3><<print lib.articles.output($building.magic.material).toUpperFirst()>> ring</h3>
                    $building.magic.secondOutputs</div><</replace>><</link>><<run lib.logger.info($building.magic)>>
      <<default>>
        <<set $building.magic to lib.createMagic($building.magicType)>><<run lib.logger.info($building.magic)>>
        <<replace "#magic">><div class='descriptive'><h3>$building.magic.name</h3>$building.magic.description</div><</replace>>
    <</switch>>
  <</button>>
  <span id="magic"></span>
</span>