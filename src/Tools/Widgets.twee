
:: Widgets [widget widgets]

<<widget "goods">>
<<nobr>>
	<<set _obj to $args[0]>>
	<<set _target to $args[1]>>
	<<capture _obj, _target>>
	<table>
		<tr>
			<th>Goods</th>
			<th>Cost</th>
		</tr>
		<<for _item range _target>>
			<<if ndef _item.exclusions>>
				<<set _isValid to true>>
			<<elseif (typeof _item.exclusions === "function")>>
				<<set _isValid to _item.exclusions($town, _obj)>>
			<</if>>
			<<if _isValid === true>>
				<<set _name to _item.name || _item.summary>>
				<<set _name to _name.toUpperFirst()>>
				<tr>
					<td>
					<<if def _item.description>>
						<<tooltip _name _item.description>>
					<<else>>
						<<print _item.name || _item.summary>>
					<</if>>
					</td>
					<td><<money _item.cost _obj>></td>
				</tr>
		<</if>><<unset _isValid>><</for>>
	</table>
	<</capture>>
<</nobr>>
<</widget>>

\<<widget "shop">>
\<<set _building to $args[0]>>
\<<set _tableHeaders to $args[1].tableHeaders || {
	left: "item",
	right: "cost"
}>>
\<<set _title to $args[1].title || null>>
\<table><tr>
    \<th><<print lib.toTitleCase(_tableHeaders.left)>></th>
    \<th><<print lib.toTitleCase(_tableHeaders.right)>></th></tr>
\<<for _i, _type range Object.keys($args[1].category)>>
\<tr><th><<print lib.toTitleCase(_type)>></th><th></th></tr>
	\<<set _availableItems to lib.inventory.filter(function (item) {
  return item.availability <= _availability
  && item.type === _type
  && item.availabilityLocation.includes($building.buildingType)
  })>>
	\<<if _availableItems.length > 0>>
	\<<for _i, _item range _availableItems>>
	\<tr><td>_item.name</td><td><<money _item.cost $building>></td></tr>
	\<</for>><</if>>
\<</for>></table><</widget>>

\<<widget "sell">>
\<<set _building to $args[0]>>
	\<<set _title to $args[1]>>
	\<<set _key to $args[2]>>
\<<if ndef _key>><<set _key to _title>><</if>>
\<<set _availableItems to lib.inventory.filter(function (item) {
  return item.availability <= _availability
  && item.type === _key
  && item.availabilityLocation.includes($building.buildingType)
  })>>
<tr><th><<print lib.toTitleCase(_title)>></th><th>Cost</th></tr>
	\<<for _i, _item range _availableItems>>
	<tr><td>_item.name</td><td><<money _item.cost $building>></td></tr>
	\<</for>>
<</widget>>

<<widget "tooltip">><<nobr>>
	<<set _target to $args[0]>>
	<<set _description to $args[1] || $args[0]>>
	<<print lib.createTippyFull(_description, _target)>> 
<</nobr>><</widget>>

<<widget "money">><<print setup.money($args[0], $args[1])>><</widget>>

<<widget "factionResource">><<if $args[1] === true>><<print $args[0].amount.toUpperFirst()>> $args[0].type<<else>><<print $args[0].amount>> $args[0].type<</if>><</widget>>

<<widget "building">><<nobr>>
<<set _building = $args[0],
	_readout = $args[1] || _building.name>>
<span @id="_building.name" + '-tooltip' class="tip">
<<set _buildingTitle to lib.toTitleCase(_readout)>>
<<link "_buildingTitle">>
<<set $currentPassage to _building>>
  <<run setup.history(_building, null, _readout)>>
  <<run console.log(_building)>>
  <<if settings.showSliders>>
      <<goto _building.initPassage>>
    <<else>>
      <<goto _building.passageName>>
  <</if>>
<</link>>
</span>
<<run setup.profileTooltip(_building.tooltip, _building)>><<run setup.tippy(".btn")>>
<</nobr>><</widget>>

<<widget "profile">>
    \<<set _object = $args[0],
        _readout = $args[1] || _object.name,
        _id = Util.slugify((_object.key || _object.name || _object.description || _object.wordNoun || "profile"))>>
    \<<capture _object, _readout, _id>>
        \<span @id="_id" class="tip"><<if $args[2] is true>><<print lib.articles.find(_readout)>><</if>> <<link _readout>>
				<<run setup.history(_object, null, _readout)>>
				<<set $currentPassage to _object>>	
				\<<if settings.showSliders && _object.initPassage>>
						\<<goto _object.initPassage>>
					\<<else>>
						\<<goto _object.passageName>>
					<</if>>
				<</link>></span>
        \<<run setup.profileTooltip(_id, _object)>>
				\<<run tippy('.tip')>>
    \<</capture>>
\<</widget>>


<<widget "temp">>
<<nobr>>
	<<set _temp = $args[0]>>
	<<capture _temp>>
		<<if $showCelsius is true>>
			<<set _temp -= 32>>
			<<set _temp to Math.trunc(_temp *= 0.5556)>>_temp Celsius
		<<else>>
			_temp Fahrenheit
		<</if>>
	<</capture>>
<</nobr>>
<</widget>>
