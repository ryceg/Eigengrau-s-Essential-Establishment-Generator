:: BuildingRelationshipsTable [nobr]
<div id="BuildingRelationshipsTable" >
<<set _buildingRelationships to lib.findReciprocalRelationships(
  $town, 
  lib.findInArray($town.buildings, "key", $currentPassage.key), 
  null, 
  'building')>>
<<if _buildingRelationships.length > 0>>
<div class='classTable'>
  <table>
    <tr>
      <th>Name</th>
      <th>Race</th>
      <th>Occupation</th>
      <th>Relationship</th>
    </tr>
    <<for _i to 0; _i lt _buildingRelationships.length; _i++>><<set _profession to lib.findProfession($town, $npcs[_buildingRelationships[_i].npcKey])>>
      <tr>
        <td><<profile $npcs[_buildingRelationships[_i].npcKey]>></td>
        <td><<print $npcs[_buildingRelationships[_i].npcKey].race.toUpperFirst()>></td>
        <td><<print lib.createTippyFull(_profession.description.toUpperFirst(), $npcs[_buildingRelationships[_i].npcKey].profession.toUpperFirst())>></td>
        <td>
        <<if _buildingRelationships[_i].description || _buildingRelationships[_i].reciprocalRelationship>>
            <<print lib.createTippyFull(
              _buildingRelationships[_i].description || 
              lib.findInArray($town.buildings, "key", _buildingRelationships[_i].otherKey).name + " is " + lib.articles.output(_buildingRelationships[_i].reciprocalRelationship) + " to " + $npcs[_buildingRelationships[_i].npcKey].firstName, 
              lib.toTitleCase(_buildingRelationships[_i].relationship))>>
          <<else>>
            <<print lib.toTitleCase(_buildingRelationships[_i].relationship)>>
        <</if>>
        </td>
      </tr>
    <</for>>
  </table>
</div>
<</if>>
</div>